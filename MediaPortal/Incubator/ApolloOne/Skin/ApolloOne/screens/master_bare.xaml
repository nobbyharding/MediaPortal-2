<?xml version="1.0" encoding="utf-8"?>

<!--
This is the master template for standard menu screens:
On top the window buttons, the player controls and the notification symbol,
at the middle the client area and
at the bottom the navbar.

Usage:

  <Include
      xmlns="www.team-mediaportal.com/2008/mpf/directx"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      Source="screens\master_bare.xaml">
    <Include.Resources>
      <ControlTemplate x:Key="Client_Template">
        [UI element to be displayed in the client area]
      </ControlTemplate>
    </Include.Resources>
  </Include>

Parameters which have to be accessible by a DynamicResource lookup:
 - Client_Template (ConrolTemplate): Template for element to be shown in the client area.
-->

<Screen
    xmlns="www.team-mediaportal.com/2008/mpf/directx"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mp_special_workflow="clr-namespace:MediaPortal.UI.SkinEngine.SpecialElements.Workflow"
    xmlns:mp_special_controls="clr-namespace:MediaPortal.UI.SkinEngine.SpecialElements.Controls"
    mp_special_workflow:WorkflowContext.StateSlot="Root"
    x:Name="Screen"
    >
  <Screen.Resources>
    <Model x:Key="MouseModel" Id="CA6428A7-A6E2-4dd3-9661-F89CEBAF8E62"/>
    <Model x:Key="HomeServerModel" Id="854ABA9A-71A1-420b-A657-9641815F9C01"/>
  </Screen.Resources>
  <Screen.Triggers>
    <EventTrigger RoutedEvent="Screen.Show">
      <EventTrigger.Actions>
        <BeginStoryboard Storyboard="{ThemeResource ShowScreenStoryboard}"/>
      </EventTrigger.Actions>
    </EventTrigger>
    <EventTrigger RoutedEvent="Screen.Hide">
      <EventTrigger.Actions>
        <BeginStoryboard Storyboard="{ThemeResource HideScreenStoryboard}"/>
      </EventTrigger.Actions>
    </EventTrigger>
  </Screen.Triggers>
  <DockPanel x:Name="ScreenAnimationElement" RenderTransformOrigin="0.5,0.5" LastChildFill="True">
    <DockPanel.RenderTransform>
      <TransformGroup>
        <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1" ScaleY="1"/>
        <SkewTransform CenterX="0.5" CenterY="0.5" AngleX="0" AngleY="0"/>
        <RotateTransform CenterX="0.5" CenterY="0.5" Angle="0"/>
        <TranslateTransform X="0" Y="0"/>
      </TransformGroup>
    </DockPanel.RenderTransform>
    <Grid x:Name="HeaderPanel" DockPanel.Dock="Top" Background="{ThemeResource HeaderPanelBackgroundBrush}"
        Height="{ThemeResource HeaderPanelHeight}">
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="130"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>

      <DockPanel x:Name="WindowButtonsPanel" Grid.Column="0" Grid.Row="0" LastChildFill="True" Margin="10"
          VerticalAlignment="Top" HorizontalAlignment="Left" DataContext="{Binding RelativeSource={RelativeSource Self},Path=Screen}">
        <!-- Morpheus_xx, 2013-04-27: Power menu button should be available also when not using mouse (remote, keyboard) -->
        <!--<DockPanel.IsVisible>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} &amp;&amp; {1}">
            <Binding Path="HasInputFocus"/>
            <Binding Source="{StaticResource MouseModel}" Path="IsMouseUsed"/>
          </MultiBinding>
        </DockPanel.IsVisible>-->
        <Button x:Name="PowerButton" Style="{ThemeResource PowerButtonStyle}" Margin="3"
            OpacityMask="#A0000000" HorizontalAlignment="Left" 
            Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=BBFA7DB7-5055-48D5-A904-0F0C79849369}">
          <Button.Triggers>
            <Trigger Property="HasFocus" Value="True">
              <Trigger.Setters>
                <Setter Property="OpacityMask" Value="#FF000000"/>
              </Trigger.Setters>
            </Trigger>
          </Button.Triggers>
        </Button>
      </DockPanel> <!-- WindowButtonsPanel -->
      <StackPanel x:Name="PlayerControlsPanel" Grid.Column="1" Grid.Row="0" Orientation="Horizontal"
          HorizontalAlignment="Center" VerticalAlignment="Top">
        <mp_special_controls:PlayerControl Margin="3" Style="{ThemeResource NavigationScreenPlayerControlStyle}" Width="400"
            HorizontalAlignment="Left" VerticalAlignment="Top"
            PlayerContext="PrimaryPlayer"/>
        <mp_special_controls:PlayerControl Margin="3" Style="{ThemeResource NavigationScreenPlayerControlStyle}" Width="400"
            HorizontalAlignment="Left" VerticalAlignment="Top"
            PlayerContext="SecondaryPlayer"/>
      </StackPanel> <!-- PlayerControlsPanel -->
      <Control x:Name="NotificationControl" Grid.Column="2" Grid.Row="0" Margin="10" Style="{ThemeResource NotificationControlStyle}"
          HorizontalAlignment="Right" VerticalAlignment="Top"/>
      <DockPanel LastChildFill="True" Grid.Column="3" Grid.Row="0" Margin="10" Width="64" Height="64"
          HorizontalAlignment="Right" VerticalAlignment="Top">
        <Image x:Name="HomeServerConnected" Stretch="Uniform"
            IsVisible="{Binding Source={StaticResource HomeServerModel},Path=IsHomeServerConnected}"
            Source="server-connected-icon.png"/>
        <Image x:Name="HomeServerDisconnected" Stretch="Uniform"
            IsVisible="{Binding Source={StaticResource HomeServerModel},Path=!IsHomeServerConnected}"
            Source="server-disconnected-icon.png"/>
      </DockPanel>
    </Grid> <!-- HeaderPanel -->
    <Line x:Name="UpperSeparator" X1="0" X2="10" Height="1" Stroke="{ThemeResource HeaderFooterSeparatorLineStrokeColor}" StrokeThickness="1"
        HorizontalAlignment="Stretch" DockPanel.Dock="Top"/>
    <DockPanel x:Name="FooterPanel" DockPanel.Dock="Bottom" Height="{ThemeResource FooterPanelHeight}" LastChildFill="False"
        Background="{ThemeResource FooterPanelBackgroundBrush}">
      <mp_special_controls:WorkflowNavigationBar Style="{ThemeResource WorkflowNavigationBarStyle}" DockPanel.Dock="Bottom"/>
    </DockPanel> <!-- FooterPanel -->
    <Line x:Name="LowerSeparator" X1="0" X2="10" Height="1" Stroke="{ThemeResource HeaderFooterSeparatorLineStrokeColor}" StrokeThickness="1"
        HorizontalAlignment="Stretch" DockPanel.Dock="Bottom"/>

<!-- Not sure if and how we should show shortcuts...
    <ListView x:Name="KeyBindingControls" DockPanel.Dock="Bottom" Style="{ThemeResource KeyBindingsListViewStyle}"
        Height="100" ItemsSource="{DynamicResource KeyBindingControls}"/>
-->
    <Image Source="shadow_complete.png" DockPanel.Dock="Center" />

    <!-- Order matters here: The client area control has to be the last control (LastChildFill) -->
    <Control x:Name="ClientArea" DockPanel.Dock="Center"
        Template="{DynamicResource ResourceKey=Client_Template}"/>
  </DockPanel>
</Screen>